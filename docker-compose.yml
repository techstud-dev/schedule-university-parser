version: '3.8'

services:
  schedule-university-parser:
      image: schedule-university-parser
      build: .
      container_name: schedule-university-parser-container
      ports:
        - "9090:8080"
      restart: unless-stopped
      environment:
        DB_HOST: postgres
        DB_PORT: 5432
        DB_NAME: schedule_university_auth
        DB_USER: abuser
        DB_PASSWORD: abuser
        SPRING_PROFILES_ACTIVE: prod
        LOGGING_LEVE: INFO
      healthcheck:
        test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
        interval: 30s
        timeout: 10s
        retries: 3
  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
      - "9094:9094"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9093" ]
      interval: 10s
      retries: 5
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE_SSL://kafka:9093,OUTSIDE_SSL://localhost:9094
      KAFKA_LISTENERS: INSIDE_SSL://0.0.0.0:9093,OUTSIDE_SSL://0.0.0.0:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE_SSL:SSL,OUTSIDE_SSL:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE_SSL
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.client.keystore.jks
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.client.truststore.jks
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.client.keystore.jks
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.client.truststore.jks
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      KAFKA_SSL_KEY_CREDENTIALS: sslkey_creds
      KAFKA_SSL_KEYSTORE_CREDENTIALS: sslkeystore_creds
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: ssltruststore_creds
      KAFKA_ZOOKEEPER_SASL_ENABLED: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    volumes:
      - ./src/test/resources/kafka/:/etc/kafka/secrets/

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.7.2
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - 8082:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: SSL
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.client.truststore.jks
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_PASSWORD: password
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.client.keystore.jks
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_KEYSTORE_PASSWORD: password
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_KEY_PASSWORD: password
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
      - ./src/test/resources/kafka/:/etc/kafka/secrets/

  redis:
    image: 'redis:7.4.1'  # Убедитесь, что используете версию Redis с поддержкой SSL
    container_name: redis
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    ports:
      - "6379:6379"    # Порт для обычного подключения
      - "6380:6380"    # Порт для SSL
    volumes:
      - ./src/test/resources/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./src/test/resources/redis/redis-server.key:/certs/redis-server.key
      - ./src/test/resources/redis/redis-server.crt:/certs/redis-server.crt
      - ./src/test/resources/redis/ca-cert.pem:/certs/ca-cert.pem

    environment:
      - REDIS_PASSWORD=password  # Пароль Redis для защиты подключения
