spring.application.name=sch-parser
spring.application.systemName=tchs
spring.application.version=0.0.2-SNAPSHOT
logging.config=classpath:dev/log4j2-dev.xml
logging.level.org.springframework.data.redis=DEBUG


# Kafka dev config
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVER:localhost:9094}
kafka.topic.parsing-queue=${PARSE_QUEUE:PARSE_QUEUE}
kafka.topic.parsing-result=${PARSING_RESULT_QUEUE:PARSING_RESULT_QUEUE}
kafka.topic.parsing-failure=${PARSING_FAILURE_QUEUE:PARSING_FAILURE_QUEUE}
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.ssl.key-store-type=JKS
spring.kafka.ssl.trust-store-type=JKS
spring.kafka.listener.concurrency=${KAFKA_LISTEN_THREAD_COUNT:7}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.security.protocol=SSL
spring.kafka.ssl.key-password=${SSL_KEY_PASS:password}
spring.kafka.ssl.trust-store-location=${TRUST_STORE_LOCATION:src/test/resources/kafka/kafka.client.truststore.jks}
spring.kafka.ssl.trust-store-password=${TRUST_STORE_PASSWORD:password}
spring.kafka.ssl.key-store-location=${KEY_STORE_LOCATION:src/test/resources/kafka/kafka.client.keystore.jks}
spring.kafka.ssl.key-store-password=${KEY_STORE_PASSWORD:password}

# HTTP config
http.client.connection-timeout=25000
http.client.socket-timeout=25000
http.client.request-timeout=25000

# Proxy config
http.client.proxy.enabled=${PROXY_ENABLED:false}
http.client.proxy.host=${PROXY_HOST:localhost}
http.client.proxy.port=${PROXY_PORT:1}

# Redis Configuration
redis.host=${REDIS_HOST:localhost}
redis.port=${REDIS_PORT:6380}
redis.username=${REDIS_USERNAME:default}
redis.password=${REDIS_PASSWORD:password}
redis.ssl=true
redis.key-store-location=${KEY_STORE_LOCATION:src/test/resources/redis/keystore.jks}
redis.key-store-password=${KEY_STORE_PASSWORD:password}
redis.trust-store-location=${TRUST_STORE_LOCATION:src/test/resources/redis/truststore.jks}
redis.trust-store-password=${TRUST_STORE_PASSWORD:password}
spring.redis.client-type=jedis
logging.level.org.springframework.cache=DEBUG

# Metrics Grafana
management.server.port=8091
management.endpoints.web.exposure.include=health,prometheus
management.prometheus.metrics.export.enabled=true
management.metrics.distribution.percentiles-histogram."[http.server.requests]"=true

#Async config
app.async.core-pool-size=${CORE_POOL_SIZE:5}
app.async.max-pool-size=${MAX_POOL_SIZE:10}
app.async.queue-capacity=${QUEUE_CAPACITY:25}
